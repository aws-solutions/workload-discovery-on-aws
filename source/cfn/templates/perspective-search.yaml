AWSTemplateFormatVersion: 2010-09-09

Transform: AWS::Serverless-2016-10-31

Description: AWS Perspective Opensearch Lambda Stack

Parameters:
  DeploymentBucket:
    Type: String

  DeploymentBucketKey:
    Type: String

  VpcId:
    Type: AWS::EC2::VPC::Id

  VPCCidrBlock:
    Type: String

  PrivateSubnet0:
    Type: AWS::EC2::Subnet::Id

  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id

  OpensearchSg:
    Type: AWS::EC2::SecurityGroup::Id

  OpensearchLambdaRoleArn:
    Type: String

  OpensearchDomainEndpoint:
    Type: String

  CustomUserAgent:
    Type: String
    Default: 'AwsSolution/SO0075/1.1.0'

Resources:

  SearchLambdaSg:
    Type: AWS::EC2::SecurityGroup
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F1000
            reason: We are looking to introduce VPCe for Config that will let us lock this down futher.
    Properties:
      GroupDescription: Security group for Search lambda
      VpcId: !Ref VpcId

  OpenseachSgIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress Security Group for Opensearch
      FromPort: 443
      ToPort: 443
      GroupId: !Ref OpensearchSg
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref SearchLambdaSg

  OpensearchFunction:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W92
            reason: 'Not applicable'
          - id: W58
            reason: cfn_nag is not scanning the Role that it is actually using. You will see in then ElasticSearchLambdaRole template that it does have access
    Type: AWS::Lambda::Function
    Properties:
      Role: !Ref OpensearchLambdaRoleArn
      Handler: index.handler
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: !Sub ${DeploymentBucketKey}/search.zip
      Runtime: nodejs14.x
      Description: Lambda for querying and writing to Opensearch
      Timeout: 10
      TracingConfig:
       Mode: Active
      VpcConfig:
        SecurityGroupIds:
          - !Ref SearchLambdaSg
        SubnetIds:
          - !Ref PrivateSubnet0
          - !Ref PrivateSubnet1
      MemorySize: 1024
      Environment:
        Variables:
          ES_REGION: !Sub ${AWS::Region}
          ES_DOMAIN: !Ref OpensearchDomainEndpoint
          CustomUserAgent: !Ref CustomUserAgent

  OpensearchLambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm if Opensearch lambda function errors out too many times
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref OpensearchFunction
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 10
      EvaluationPeriods: 3
      Period: 60
      TreatMissingData: notBreaching

Outputs:
  SearchFunctionArn:
    Description: Gremlin function details
    Value: !GetAtt OpensearchFunction.Arn
