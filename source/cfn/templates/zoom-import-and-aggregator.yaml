AWSTemplateFormatVersion: '2010-09-09'

Description: Perspective AWS Config Aggregtor Stack

Parameters:
  ExistingConfigInstallation:
    Type: String
Conditions:
  SetUpConfig: !Equals [!Ref ExistingConfigInstallation, 'No']

Resources:
  ConfigurationAggregator:
    Type: AWS::Config::ConfigurationAggregator
    Properties:
      AccountAggregationSources:
        - AccountIds:
            - Ref: AWS::AccountId
          AllAwsRegions: true
      ConfigurationAggregatorName:
        Fn::Sub: aws-perspective-${AWS::Region}-${AWS::AccountId}-aggregator
  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Condition: SetUpConfig
    Properties:
      Name: default
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true
      RoleARN:
        Fn::GetAtt:
          - ConfigRole
          - Arn
  DeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Condition: SetUpConfig
    Properties:
      S3BucketName:
        Ref: ConfigBucket

  ConfigBucket:
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: 'only accessed by config, writes very frequently so will be costly'
    Condition: SetUpConfig
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  
  ConfigBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: SetUpConfig
    Properties:
      Bucket: !Ref ConfigBucket
      PolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [{
              "Sid": "AWSConfigBucketPermissionsCheck",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "config.amazonaws.com"
                ]
              },
              "Action": "s3:GetBucketAcl",
              "Resource": "arn:aws:s3:::${ConfigBucket}"
            },
            {
              "Sid": "AWSConfigBucketExistenceCheck",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "config.amazonaws.com"
                ]
              },
              "Action": "s3:ListBucket",
              "Resource": "arn:aws:s3:::${ConfigBucket}"
            },
            {
              "Sid": " AWSConfigBucketDelivery",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "config.amazonaws.com"
                ]
              },
              "Action": "s3:PutObject",
              "Resource": "arn:aws:s3:::${ConfigBucket}/AWSLogs/${AWS::AccountId}/Config/*",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            },
            {
              "Sid": "HttpsOnly",
              "Action": "*",
              "Effect": "Deny",
              "Resource": ["arn:aws:s3:::${ConfigBucket}/AWSLogs/${AWS::AccountId}/Config/*", "arn:aws:s3:::${ConfigBucket}"],
              "Principal": "*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              }
            }
          ]
        }
      
  ConfigRole:
    Type: AWS::IAM::Role
    Condition: SetUpConfig
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSConfigRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:GetBucketAcl
                Resource:
                  Fn::Sub: arn:aws:s3:::${ConfigBucket}
              - Effect: Allow
                Action: s3:PutObject
                Resource:
                  Fn::Sub: arn:aws:s3:::${ConfigBucket}/AWSLogs/${AWS::AccountId}/*
                Condition:
                  StringEquals:
                    s3:x-amz-acl: bucket-owner-full-control

Outputs:

  ConfigBucket:
    Condition: SetUpConfig
    Value: !Ref ConfigBucket

  PerspectiveConfigurationAggregator:
    Description: AWS config aggreagtor
    Value:
      Ref: ConfigurationAggregator

