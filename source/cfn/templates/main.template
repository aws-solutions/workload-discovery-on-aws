AWSTemplateFormatVersion: 2010-09-09

Description: Workload Discovery on AWS Main Template (SO0075a) - Solution - Main Template (uksb-1r0720e27) (version:<VERSION>)

Transform: AWS::Serverless-2016-10-31

Parameters:

  AdminUserEmailAddress:
    Type: String
    AllowedPattern: "^[\\w!#$%&’*+/=?`{|}~^-]+(?:\\.[\\w!#$%&’*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$"
    ConstraintDescription: Must be an email address
    Description: A user will be created in the UI. This email address will be used to send your username and password.
  AlreadyHaveConfigSetup:
    Type: String
    Default: 'No'
    Description: Is AWS Config set-up within this Region?
    AllowedValues:
      - 'No'
      - 'Yes'
    ConstraintDescription: Please specify if this Region has AWS Config set-up (Yes / No)
  CrossAccountDiscovery:
    Type: String
    Default: SELF_MANAGED
    Description: | 
      Manage account discovery automatically using AWS Organizations or manually by importing accounts through the 
      Workload Discovery UI.
    AllowedValues:
      - SELF_MANAGED
      - AWS_ORGANIZATIONS
  OrganizationUnitId:
    Type: String
    Default: ''
    Description: | 
      The organization unit you wish Workload Discovery discover, this will typically be the root organization unit ID.
      Parameter only used when CrossAccountDiscovery is set to AWS_ORGANIZATIONS.
  AccountType:
    Type: String
    Default: DELEGATED_ADMIN
    Description: | 
      The type of AWS Organizations account to install Workload Discovery in. Parameter only used when CrossAccountDiscovery 
      is set to AWS_ORGANIZATIONS.
    AllowedValues:
      - MANAGEMENT
      - DELEGATED_ADMIN
  ConfigAggregatorName:
    Type: String
    Default: ''
    Description: |
      The AWS Organization wide Config aggregator to use. You must install the solution in the same account and 
      region as this aggregator. If left blank, a new aggregator will be created. Parameter only used when CrossAccountDiscovery 
      is set to AWS_ORGANIZATIONS.
  CpuUnits:
    Type: String
    Default: 1 vCPU
    Description:
      The number of CPUs to allocate for the Fargate task that the discovery process runs in
    AllowedValues:
      - 1 vCPU
      - 2 vCPU
      - 4 vCPU
      - 8 vCPU
  Memory:
    Type: String
    Default: 2048
    Description:
      The amount of memory to allocate for the Fargate task that the discovery process runs in
    AllowedValues:
      - 2048
      - 4096
      - 6144
      - 8192
      - 12288
      - 16384
      - 20480
      - 24576
      - 28672
      - 32768
      - 40960
      - 49152
      - 57344
  DiscoveryTaskCapacityProvider:
    Type: String
    Default: FARGATE_SPOT
    Description:
      The capacity provider that the discovery process ECS task will use
    AllowedValues:
      - FARGATE
      - FARGATE_SPOT
  DiscoveryTaskFrequency:
    Type: String
    Description: The time interval between every run of the discovery process ECS task
    Default: 15mins
    AllowedValues:
      - 15mins
      - 1hr
      - 2hrs
      - 4hrs
      - 8hrs
      - 12hrs
      - 24hrs
  CreateOpensearchServiceRole:
    Type: String
    Default: 'Yes'
    Description: | 
      Do you need an OpenSearch Service Role to be created? You can check for a Role called AWSServiceRoleForAmazonElasticsearchService 
      in your account. If it exists then you do NOT need one creating
    AllowedValues:
      - 'No'
      - 'Yes'
    ConstraintDescription: Please specify if this account has the OpenSearch service role created (Yes / No)
  NeptuneInstanceClass:
    Type: String
    Description: Neptune DB instance class that will be used for primary and all replicas. Changing this will affect the cost of running this solution.
    Default: db.r5.large
    AllowedValues:
      - db.serverless
      - db.t3.medium
      - db.t4g.medium
      - db.x2g.large
      - db.x2g.xlarge
      - db.x2g.2xlarge
      - db.x2g.4xlarge
      - db.x2g.8xlarge
      - db.x2g.12xlarge
      - db.x2g.16xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.8xlarge
      - db.r5.12xlarge
      - db.r5.16xlarge
      - db.r6g.large
      - db.r6g.xlarge
      - db.r6g.2xlarge
      - db.r6g.4xlarge
      - db.r6g.8xlarge
      - db.r6g.12xlarge
      - db.r6g.16xlarge
  MinNCUs:
    Type: String
    Default: 1
    Description: |
      Min NCUs to be set on the Neptune cluster (should be less than or equal to MaxNCUs). Required if DBInstance type 
      is db.serverless.
  MaxNCUs:
    Type: String
    Default: 128
    Description: |
      Max NCUs to be set on the Neptune cluster(Should be greater than or equal to MinNCUs). Required if DBInstance 
      type is db.serverless.
  CreateNeptuneReplica:
    Type: String
    AllowedValues:
      - 'No'
      - 'Yes'
    Default: 'No'
    Description: | 
      If you would like a read replica creating in a separate AZ. Please select 'Yes'. This will increase the cost of 
      running the solution.
  OpensearchInstanceType:
    Description: The instance type for OpenSearch data nodes
    Type: String
    Default: m6g.large.search
    AllowedValues:
      - t3.small.search
      - t3.medium.search
      - t2.micro.search
      - t2.small.search
      - t2.medium.search
      - m5.large.search
      - m5.xlarge.search
      - m5.2xlarge.search
      - m5.4xlarge.search
      - m5.12xlarge.search
      - m4.large.search
      - m4.xlarge.search
      - m4.2xlarge.search
      - m4.4xlarge.search
      - m4.10xlarge.search
      - m6g.large.search
      - m6g.xlarge.search
      - m6g.2xlarge.search
      - m6g.4xlarge.search
      - m6g.8xlarge.search
      - m6g.12xlarge.search
      - c5.large.search
      - c5.xlarge.search
      - c5.2xlarge.search
      - c5.4xlarge.search
      - c5.9xlarge.search
      - c5.19xlarge.search
      - c4.large.search
      - c4.xlarge.search
      - c4.2xlarge.search
      - c4.4xlarge.search
      - c4.8xlarge.search
      - c6g.large.search
      - c6g.xlarge.search
      - c6g.2xlarge.search
      - c6g.4xlarge.search
      - c6g.8xlarge.search
      - c6g.12xlarge.search
      - r5.large.search
      - r5.xlarge.search
      - r5.2xlarge.search
      - r5.4xlarge.search
      - r5.12xlarge.search
      - r4.large.search
      - r4.xlarge.search
      - r4.2xlarge.search
      - r4.4xlarge.search
      - r4.8xlarge.search
      - r4.16xlarge.search
      - r3.large.search
      - r3.xlarge.search
      - r3.2xlarge.search
      - r3.4xlarge.search
      - r3.8xlarge.search
      - i3.large.search
      - i3.xlarge.search
      - i3.2xlarge.search
      - i3.4xlarge.search
      - i3.8xlarge.search
      - i3.16xlarge.search
  OpensearchMultiAz:
    Description: Deploys the OpenSearch cluster across two Availability Zones (AZs) in the same region to prevent
      data loss and minimize downtime in the event of node or data center failure. This will increase the cost of running the solution
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  VpcId:
    Description: The ID of the VPC you wish to use. If left blank, a new VPC will be provisioned.
    Type: String
    Default: ''
  VpcCidrBlock:
    Description: The VPC CIDR block of the VPC referenced by the VpcId parameter. Only used if VpcId parameter is set.
    Type: String
    Default: ''
  PrivateSubnet0:
    Description: The private subnet you wish to use. Only used if VpcId parameter is set.
    Type: String
    Default: ''
  PrivateSubnet1:
    Description: The private subnet you wish to use. Only used if VpcId parameter is set.
    Type: String
    Default: ''
  AthenaWorkgroup:
    Type: String
    Default: primary
    Description: Specify the name of the Athena Workgroup you would like to use. By default it will use 'primary'.
  ApiAllowListedRanges:
    Type: CommaDelimitedList
    Description: |
      Comma separated list of CIDRs to manage access to the AppSync GraphQL API. To allow the entire internet, 
      use 0.0.0.0/1,128.0.0.0/1. If restricting access to specific CIDRs, you must also include the IP addresses (and 
      a subnet mask of /32) of the NAT gateways that allow the discovery process ECS task running in its private subnet 
      to access the internet. NB: this allowlist does not govern access to the WebUI, only the GraphQL API.
    Default: 0.0.0.0/1,128.0.0.0/1
  UsesCustomIdentity:
    Type: String
    AllowedValues:
      - 'No'
      - 'Yes'
    Default: 'No'
    ConstraintDescription: Please specify (Yes / No)
  CognitoCustomDomain:
    Type: String
    AllowedPattern: ^(?:[a-z0-9\-]{3,63})?$
    Default: ''
    Description: Leave empty if you are not using a custom IdP, otherwise must include only lowercase letters, numbers, and hyphens.
    ConstraintDescription: This string can include only lowercase letters, numbers, and hyphens.
  CognitoAttributeMapping:
    Type: String
    Default: '{"email": "email}'
    Description: | 
      The mapping of IdP attributes to standard and custom Cognito user pool attributes. Must be a valid JSON
      string.
  IdentityType:
    Type: String
    AllowedValues:
      - 'Google'
      - 'SAML'
      - 'OIDC'
      - ''
    Default: ''
    Description: Leave empty if you are not using a custom IdP

  ProviderName:
    Type: String
    Description: Name for the Identity Provider (Leave empty if you are not using a custom IdP.)
    Default: ''
    AllowedPattern: ^(?:[a-zA-Z0-9]{3,32})?$
    ConstraintDescription: The value has to be in lower case, upper case and between 3 and 32 characters.

  GoogleClientId:
    Type: String
    Default: ''
    ConstraintDescription: Must be a valid Google Client ID.
    Description: Google Client ID (Parameter only used when IdentityType is set to Google)

  GoogleClientSecret:
    Type: String
    Default: ''
    ConstraintDescription: Must be a valid Google Client Secret.
    NoEcho: true
    Description: Google Client Secret (Parameter only used when IdentityType is set to Google)

  SAMLMetadataURL:
    Type: String
    Default: ''
    ConstraintDescription: Must be a valid URL.
    Description: Metadata URL for the SAML Identity Provider (Parameter only used when IdentityType is set to SAML)

  OIDCClientId:
    Type: String
    Description: OIDC Client ID
    Default: ''
    ConstraintDescription: Must be a valid OIDC Client ID. (Parameter only used when IdentityType is set to OIDC)

  OIDCClientSecret:
    Type: String
    Description: OIDC Client Secret
    Default: ''
    NoEcho: true
    ConstraintDescription: Must be a valid OIDC Client Secret. (Parameter only used when IdentityType is set to OIDC)

  OIDCIssuerURL:
    Type: String
    Description: OIDC Issuer URL
    Default: ''
    ConstraintDescription: Must be a valid URL. (Parameter only used when IdentityType is set to OIDC)

  OIDCAttributeRequestMethod:
    Type: String
    Description: OIDC Attribute Request Method (Parameter only used when IdentityType is set to OIDC)
    AllowedValues:
      - 'GET'
      - 'POST'
    Default: 'GET'
    ConstraintDescription: Must be either GET or POST. (refer to OIDC provider or leave default)

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: User Configuration
        Parameters:
          - AdminUserEmailAddress
      - Label:
          default: AWS Config Configuration
        Parameters:
          - AlreadyHaveConfigSetup
      - Label:
          default: Neptune Configuration
        Parameters:
          - NeptuneInstanceClass
          - CreateNeptuneReplica
          - MinNCUs
          - MaxNCUs
      - Label:
          default: OpenSearch Configuration
        Parameters:
          - CreateOpensearchServiceRole
          - OpensearchInstanceType
          - OpensearchMultiAz
      - Label:
          default: Network Configuration
        Parameters:
          - VpcId
          - VpcCidrBlock
          - PrivateSubnet0
          - PrivateSubnet1
      - Label:
          default: Discovery Configuration
        Parameters:
          - CpuUnits
          - Memory
          - DiscoveryTaskCapacityProvider
          - DiscoveryTaskFrequency
      - Label:
          default: AWS Organizations Configuration
        Parameters:
          - CrossAccountDiscovery
          - OrganizationUnitId
          - AccountType
          - ConfigAggregatorName
      - Label:
          default: Amazon Athena Configuration
        Parameters:
          - AthenaWorkgroup
      - Label:
          default: WAF Configuration
        Parameters:
          - ApiAllowListedRanges
      - Label:
          default: Custom Identity Provider Configuration - the type of external IdP, a unique name for the user pool domain, and a boolean indicating if external IdP integration is necessary
        Parameters:
          - CognitoCustomDomain
          - UsesCustomIdentity
          - IdentityType
          - CognitoAttributeMapping
          - ProviderName
          - SAMLMetadataURL
          - GoogleClientId
          - GoogleClientSecret
          - OIDCClientId
          - OIDCClientSecret
          - OIDCIssuerURL
          - OIDCAttributeRequestMethod

Rules:

  OrganizationsRule:
    RuleCondition: !Equals [!Ref CrossAccountDiscovery, AWS_ORGANIZATIONS]
    Assertions:
      - Assert: !Not [!Equals [!Ref OrganizationUnitId, '']]
        AssertDescription: | 
          Organization ID parameter cannot be blank when cross account discovery is managed by AWS
          Organizations:
  OrganizationsAggregatorRule:
    RuleCondition: !Not [!Equals [!Ref ConfigAggregatorName, '']]
    Assertions:
      - Assert: !Equals [!Ref CrossAccountDiscovery, AWS_ORGANIZATIONS]
        AssertDescription: | 
          A config aggregator can only be specified when cross account discovery is managed by AWS
          Organizations
  VpcRule:
    RuleCondition: !Not [!Equals [!Ref VpcId, '']]
    Assertions:
      - Assert: !Not [!And [!Equals [ !Ref PrivateSubnet0, '' ], !Equals [ !Ref PrivateSubnet1, '' ]]]
        AssertDescription: You must provide two private subnets when using an existing VPC
      - Assert: !Not [ !Equals [ !Ref VpcCidrBlock, '' ]]
        AssertDescription: You must provide a CIDR block when using an existing VPC

Mappings:

  Solution:
    Constants:
      SolutionId: SO0075
      AppName: workload-discovery
      SolutionName: Workload Discovery On AWS
      ApplicationType: AWS-Solutions
      DeploymentBucketNamePrefix: <BUCKET_NAME>
      DeploymentBucketKey: <SOLUTION_NAME>/<VERSION>
      ImageVersion: <IMAGE_VERSION>
      SolutionVersion: <VERSION>
      NodeLambdaRuntime: nodejs20.x
      PythonLambdaRuntime: python3.12
    DiscoveryTaskFrequency:
      '15mins': cron(0/15 * * * ? *)
      '1hr': cron(0 * * * ? *)
      '2hrs': cron(0 */2 * * ? *)
      '4hrs': cron(0 */4 * * ? *)
      '8hrs': cron(0 */8 * * ? *)
      '12hrs': cron(0 */12 * * ? *)
      '24hrs': cron(0 0/24 * * ? *)
    Metrics:
      CollectAnonymizedUsageMetrics: 'true'

Conditions:
  SetUpConfig: !Equals [!Ref AlreadyHaveConfigSetup, 'No']
  IsUsingOrganizations: !Equals [!Ref CrossAccountDiscovery, AWS_ORGANIZATIONS]
  IsUsingCustomIdentity: !Equals [ !Ref UsesCustomIdentity, 'Yes' ]
  CreateVpc: !Equals [!Ref VpcId, '']
  CreateAnonymizedUsageMetrics: !Equals [!FindInMap [Solution, Metrics, CollectAnonymizedUsageMetrics], 'true']
  CreateOidcSecret: !And
    - !Condition IsUsingCustomIdentity
    - !Equals [ !Ref IdentityType, OIDC ]
  CreateGoogleSecret: !And
    - !Condition IsUsingCustomIdentity
    - !Equals [ !Ref IdentityType, Google ]

Resources:

  EchoFunction:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: Not applicable
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: !FindInMap [Solution, Constants, PythonLambdaRuntime]
      ReservedConcurrentExecutions: 1
      InlineCode: |
        import cfnresponse
        def handler (event, context):
          response_data = event.get("ResourceProperties", [])
          cfnresponse.send(
             event=event, 
             context=context, 
             responseStatus=cfnresponse.SUCCESS, 
             responseData=response_data,
             physicalResourceId=event.get("LogicalResourceId"), 
             reason=None,
           )

  Variables:
    Type: Custom::Variables
    Properties:
      ServiceToken: !GetAtt EchoFunction.Arn
      NodeLambdaRuntime: !FindInMap [Solution, Constants, NodeLambdaRuntime]
      PythonLambdaRuntime: !FindInMap [Solution, Constants, PythonLambdaRuntime]
      ExternalId: !Select [2, !Split ["/", !Ref AWS::StackId]]
      DeploymentBucket: !Sub
        - https://s3.${Region}.amazonaws.com/${DeploymentBucketNamePrefix}-${Region}/${DeploymentBucketKey}
        - DeploymentBucketKey: !FindInMap [Solution, Constants, DeploymentBucketKey]
          DeploymentBucketNamePrefix: !FindInMap [Solution, Constants, DeploymentBucketNamePrefix]
          Region: !Ref AWS::Region
      DeploymentBucketName: !Sub
        - ${DeploymentBucketNamePrefix}-${Region}
        - DeploymentBucketNamePrefix: !FindInMap [Solution, Constants, DeploymentBucketNamePrefix]
          Region: !Ref AWS::Region
      CustomUserAgent: !Sub
        - AwsSolution/${SolutionId}/${Version}
        - SolutionId: !FindInMap [ Solution, Constants, SolutionId ]
          Version: !FindInMap [ Solution, Constants, SolutionVersion ]

  WdOidcClientSecret:
    Condition: CreateOidcSecret
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Secret used by Workload Discovery for OIDC login
      SecretString: !Ref OIDCClientSecret
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  WdGoogleClientSecret:
    Condition: CreateGoogleSecret
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Secret used by Workload Discovery for Google login
      SecretString: !Ref GoogleClientSecret
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  LayerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PythonLambdaRuntime: !GetAtt Variables.PythonLambdaRuntime
        LayerBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [Solution, Constants, DeploymentBucketKey]
      TemplateURL: !Sub ${Variables.DeploymentBucket}/layers.template
      TimeoutInMinutes: 60
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  S3Buckets:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PythonLambdaRuntime: !GetAtt Variables.PythonLambdaRuntime
        S3CleanupBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [Solution, Constants, DeploymentBucketKey]
        CreateConfigBucket: !If [SetUpConfig, 'true', 'false']
        CustomResourceHelperLambdaLayer: !GetAtt LayerStack.Outputs.CustomResourceHelper
      TemplateURL: !Sub ${Variables.DeploymentBucket}/buckets.template
      TimeoutInMinutes: 60
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  VpcStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateVpc
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/vpc.template
      TimeoutInMinutes: 60
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  NeptuneStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/neptune.template
      TimeoutInMinutes: 60
      Parameters:
        AppName: !FindInMap [Solution, Constants, AppName]
        AvailabilityZone0: !If [CreateVpc, !GetAtt VpcStack.Outputs.AvailabilityZone0, !Ref AWS::NoValue]
        AvailabilityZone1: !If [CreateVpc, !GetAtt VpcStack.Outputs.AvailabilityZone1, !Ref AWS::NoValue]
        PrivateSubnet0: !If [CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet0, !Ref PrivateSubnet0]
        PrivateSubnet1: !If [CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet1, !Ref PrivateSubnet1]
        PerspectiveVPCId: !If [CreateVpc, !GetAtt VpcStack.Outputs.VPCId, !Ref VpcId ]
        PerspectiveVpcCidr: !If [CreateVpc, !GetAtt VpcStack.Outputs.VpcCidr, !Ref VpcCidrBlock ]
        Port: 6174
        CreateNeptuneReplica: !Ref CreateNeptuneReplica
        DBInstanceClass: !Ref NeptuneInstanceClass
        MinNCUs: !Ref MinNCUs
        MaxNCUs: !Ref MaxNCUs
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  ConfigAggregator:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/config-aggregator.template
      TimeoutInMinutes: 60
      Parameters:
        CrossAccountDiscovery: !Ref CrossAccountDiscovery
        ExistingConfigInstallation: !Ref AlreadyHaveConfigSetup
        ConfigBucket: !If [SetUpConfig, !GetAtt S3Buckets.Outputs.ConfigBucket, '']
        ConfigAggregatorName: !Ref ConfigAggregatorName
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  OrganizationsGlobalResourcesStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsUsingOrganizations
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/org-global-resources-stackset.template
      Parameters:
        OrganizationUnitId: !Ref OrganizationUnitId
        AccountType: !Ref AccountType
        DiscoveryRoleArn: !GetAtt TaskStack.Outputs.DiscoveryRoleArn
        ExternalId: !GetAtt Variables.ExternalId
        MyApplicationsLambdaRoleArn: !GetAtt MyApplicationsResolversStack.Outputs.MyApplicationsLambdaRoleArn
        DeploymentBucket: !GetAtt Variables.DeploymentBucket
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  OpenSearchRoleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/opensearch-roles.template
      TimeoutInMinutes: 60
      Parameters:
        CreateOpensearchServiceRole: !Ref CreateOpensearchServiceRole
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  OpenSearchStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/opensearch.template
      TimeoutInMinutes: 60
      Parameters:
        AppName: !FindInMap [Solution, Constants, AppName]
        InstanceType: !Ref OpensearchInstanceType
        ZoneAwarenessEnabled: !Ref OpensearchMultiAz
        PrivateSubnet0: !If [CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet0, !Ref PrivateSubnet0]
        PrivateSubnet1: !If [CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet1, !Ref PrivateSubnet1]
        PerspectiveVPCId: !If [CreateVpc, !GetAtt VpcStack.Outputs.VPCId, !Ref VpcId, ]
        PerspectiveVpcCidr: !If [CreateVpc, !GetAtt VpcStack.Outputs.VpcCidr, !Ref VpcCidrBlock ]
        SearchLambdaIAMRoleARN: !GetAtt OpenSearchRoleStack.Outputs.OpenSearchLambdaRoleArn
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  TaskStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/discovery-crawler.template
      TimeoutInMinutes: 60
      Parameters:
        PythonLambdaRuntime: !GetAtt Variables.PythonLambdaRuntime
        DiscoveryBucket: !GetAtt S3Buckets.Outputs.DiscoveryBucket
        AppName: !FindInMap [Solution, Constants, AppName]
        PrivateSubnet0: !If [ CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet0, !Ref PrivateSubnet0 ]
        PrivateSubnet1: !If [ CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet1, !Ref PrivateSubnet1 ]
        VpcId: !If [ CreateVpc, !GetAtt VpcStack.Outputs.VPCId, !Ref VpcId, ]
        VpcEndpointsSg: !If [ CreateVpc, !GetAtt VpcStack.Outputs.VpcEndpointsSg, !Ref AWS::NoValue ]
        ImageVersion: !FindInMap [Solution, Constants, ImageVersion]
        DiscoveryTaskFrequency: !FindInMap [Solution, DiscoveryTaskFrequency, !Ref DiscoveryTaskFrequency]
        CrossAccountDiscovery: !Ref CrossAccountDiscovery
        OrganizationUnitId: !Ref OrganizationUnitId
        ConfigurationAggregator: !GetAtt ConfigAggregator.Outputs.PerspectiveConfigurationAggregator
        AppSyncArn: !GetAtt AppSyncApiStack.Outputs.AppSyncApiArn
        AppSyncApiUrl: !GetAtt AppSyncApiStack.Outputs.AppSyncApiUrl
        Cpu: !Ref CpuUnits
        Memory: !Ref Memory
        DiscoveryTaskCapacityProvider: !Ref DiscoveryTaskCapacityProvider
        Decorators: !GetAtt LayerStack.Outputs.Decorators
        BotoUtils: !GetAtt LayerStack.Outputs.BotoUtils
        CustomResourceHelper: !GetAtt LayerStack.Outputs.CustomResourceHelper
        CustomUserAgent: !GetAtt Variables.CustomUserAgent
        DeploymentBucketName: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  CodebuildStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/codebuild.template
      TimeoutInMinutes: 60
      Parameters:
        PythonLambdaRuntime: !GetAtt Variables.PythonLambdaRuntime
        CloudfrontDistributionId: !GetAtt WebUiStack.Outputs.DistributionId
        ContainerRepo: !GetAtt TaskStack.Outputs.ContainerRepo
        CustomResourceHelperLambdaLayer: !GetAtt LayerStack.Outputs.CustomResourceHelper
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
        DeploymentBucketName: !GetAtt Variables.DeploymentBucketName
        ImageVersion: !FindInMap [Solution, Constants, ImageVersion]
        SolutionVersion: !FindInMap [Solution, Constants, SolutionVersion]
        WebUIBucket: !GetAtt S3Buckets.Outputs.WebUIBucket
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  CognitoStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/cognito.template
      TimeoutInMinutes: 60
      Parameters:
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
        AdminUserEmailAddress: !Ref AdminUserEmailAddress
        AmplifyStorageBucket: !GetAtt S3Buckets.Outputs.AmplifyStorageBucket
        WebUiUrl: !GetAtt WebUiStack.Outputs.WebUiUrl
        PythonLambdaRuntime: !GetAtt Variables.PythonLambdaRuntime
        LambdaPowertoolsPythonLayer: !GetAtt LayerStack.Outputs.LambdaPowertoolsPython
        BotoUtils: !GetAtt LayerStack.Outputs.BotoUtils
        CustomResourceHelper: !GetAtt LayerStack.Outputs.CustomResourceHelper
        CognitoDomain: !Ref CognitoCustomDomain
        UsesCustomIdentity: !Ref UsesCustomIdentity
        AttributeMapping: !Ref CognitoAttributeMapping
        IdentityType: !Ref IdentityType
        ProviderName: !Ref ProviderName
        GoogleClientId: !Ref GoogleClientId
        GoogleClientSecretArn: !If [CreateGoogleSecret, !Ref WdGoogleClientSecret, '']
        SAMLMetadataURL: !Ref SAMLMetadataURL
        OIDCClientId: !Ref OIDCClientId
        OIDCClientSecretArn: !If [CreateOidcSecret, !Ref WdOidcClientSecret, '']
        OIDCIssuerURL: !Ref OIDCIssuerURL
        OIDCAttributeRequestMethod: !Ref OIDCAttributeRequestMethod
        CloudfrontDistributionURL: !GetAtt WebUiStack.Outputs.WebUiUrl
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  GremlinResolversStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/gremlin-resolvers.template
      TimeoutInMinutes: 60
      Parameters:
        NodeLambdaRuntime: !GetAtt Variables.NodeLambdaRuntime
        CustomUserAgent: !GetAtt Variables.CustomUserAgent
        NeptuneClusterResourceId: !GetAtt NeptuneStack.Outputs.NeptuneClusterResourceId
        NeptuneClusterURL: !GetAtt NeptuneStack.Outputs.NeptuneEndpointAddress
        NeptuneClusterPort: !GetAtt NeptuneStack.Outputs.NeptuneEndpointPort
        NeptuneDbSg: !GetAtt NeptuneStack.Outputs.NeptuneDbSg
        PerspectiveAppSyncApiId: !GetAtt AppSyncApiStack.Outputs.AppSyncApiId
        AppSyncSettingsLambdaDataSourceName: !GetAtt SettingsResolversStack.Outputs.AppSyncSettingsLambdaDataSourceName
        VpcId: !If [ CreateVpc, !GetAtt VpcStack.Outputs.VPCId, !Ref VpcId, ]
        VPCCidrBlock: !If [CreateVpc, !GetAtt VpcStack.Outputs.VpcCidr, !Ref VpcCidrBlock ]
        PrivateSubnet0: !If [ CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet0, !Ref PrivateSubnet0 ]
        PrivateSubnet1: !If [ CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet1, !Ref PrivateSubnet1 ]
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]

      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  SearchResolversStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/search-resolvers.template
      TimeoutInMinutes: 60
      Parameters:
        NodeLambdaRuntime: !GetAtt Variables.NodeLambdaRuntime
        CustomUserAgent: !GetAtt Variables.CustomUserAgent
        OpenSearchDomainEndpoint: !GetAtt OpenSearchStack.Outputs.DomainEndpoint
        OpenSearchSg: !GetAtt OpenSearchStack.Outputs.OpenSearchSg
        OpenSearchLambdaRoleArn: !GetAtt OpenSearchRoleStack.Outputs.OpenSearchLambdaRoleArn
        PerspectiveAppSyncApiId: !GetAtt AppSyncApiStack.Outputs.AppSyncApiId
        VpcId: !If [CreateVpc, !GetAtt VpcStack.Outputs.VPCId, !Ref VpcId]
        VPCCidrBlock: !If [CreateVpc, !GetAtt VpcStack.Outputs.VpcCidr, !Ref VpcCidrBlock ]
        PrivateSubnet0: !If [CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet0, !Ref PrivateSubnet0]
        PrivateSubnet1: !If [CreateVpc, !GetAtt VpcStack.Outputs.PrivateSubnet1, !Ref PrivateSubnet1]
        SolutionVersion: !FindInMap [Solution, Constants, SolutionVersion]
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  DrawIoExportResolversStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/draw-io-resolvers.template
      TimeoutInMinutes: 60
      Parameters:
        PythonLambdaRuntime: !GetAtt Variables.PythonLambdaRuntime
        PerspectiveAppSyncApiId: !GetAtt AppSyncApiStack.Outputs.AppSyncApiId
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  MyApplicationsResolversStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/myapplications-resolvers.template
      TimeoutInMinutes: 60
      Parameters:
        NodeLambdaRuntime: !GetAtt Variables.NodeLambdaRuntime
        PerspectiveAppSyncApiId: !GetAtt AppSyncApiStack.Outputs.AppSyncApiId
        ExternalId: !GetAtt Variables.ExternalId
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  AccountImportTemplatesResolversStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/account-import-templates-resolvers.template
      TimeoutInMinutes: 60
      Parameters:
        NodeLambdaRuntime: !GetAtt Variables.NodeLambdaRuntime
        SolutionVersion: !FindInMap [ Solution, Constants, SolutionVersion ]
        PerspectiveAppSyncApiId: !GetAtt AppSyncApiStack.Outputs.AppSyncApiId
        DiscoveryRoleArn: !GetAtt TaskStack.Outputs.DiscoveryRoleArn
        ExternalId: !GetAtt Variables.ExternalId
        MyApplicationsLambdaRoleArn: !GetAtt MyApplicationsResolversStack.Outputs.MyApplicationsLambdaRoleArn
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  AppSyncApiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/appsync-api.template
      TimeoutInMinutes: 60
      Parameters:
        CognitoUserPoolId: !GetAtt CognitoStack.Outputs.UserPoolId
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
        ApiAllowListedRanges: !Join [',',  !Ref ApiAllowListedRanges]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  CostResolversStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/cost-resolvers.template
      TimeoutInMinutes: 60
      Parameters:
        NodeLambdaRuntime: !GetAtt Variables.NodeLambdaRuntime
        CustomUserAgent: !GetAtt Variables.CustomUserAgent
        CostAndUsageResultsBucket: !GetAtt S3Buckets.Outputs.CostAndUsageAthenaResultsBucket
        CostAndUsageReportBucket: !GetAtt S3Buckets.Outputs.CostAndUsageReportBucket
        PerspectiveAppSyncApiId: !GetAtt AppSyncApiStack.Outputs.AppSyncApiId
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  SettingsResolversStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/settings-resolvers.template
      TimeoutInMinutes: 60
      Parameters:
        CrossAccountDiscovery: !Ref CrossAccountDiscovery
        NodeLambdaRuntime: !GetAtt Variables.NodeLambdaRuntime
        CustomUserAgent: !GetAtt Variables.CustomUserAgent
        ConfigurationAggregator: !GetAtt ConfigAggregator.Outputs.PerspectiveConfigurationAggregator
        PerspectiveAppSyncApiId: !GetAtt AppSyncApiStack.Outputs.AppSyncApiId
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  AthenaGlueCrawlerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/athena-glue-crawler.template
      TimeoutInMinutes: 60
      Parameters:
        NodeLambdaRuntime: !GetAtt Variables.NodeLambdaRuntime
        CostAndUsageBucket: !GetAtt S3Buckets.Outputs.CostAndUsageReportBucket
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  WebUiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/webui.template
      TimeoutInMinutes: 60
      Parameters:
        AccessLogsBucket: !GetAtt S3Buckets.Outputs.AccessLogsBucket
        WebUIBucket: !GetAtt S3Buckets.Outputs.WebUIBucket
        WebUIBucketRegionalDomainName: !GetAtt S3Buckets.Outputs.WebUIBucketRegionalDomainName
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  WebUiSettingsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/webui-settings.template
      TimeoutInMinutes: 60
      Parameters:
        PythonLambdaRuntime: !GetAtt Variables.PythonLambdaRuntime
        WebUIBucket: !GetAtt S3Buckets.Outputs.WebUIBucket
        CrossAccountDiscovery: !Ref CrossAccountDiscovery
        AmplifyBucketName: !GetAtt S3Buckets.Outputs.AmplifyStorageBucket
        AppSyncEndpoint: !GetAtt AppSyncApiStack.Outputs.AppSyncApiUrl
        CognitoIdentityPoolId: !GetAtt CognitoStack.Outputs.IdentityPoolId
        CognitoUserPoolId: !GetAtt CognitoStack.Outputs.UserPoolId
        CognitoUserPoolWebClientId: !GetAtt CognitoStack.Outputs.WebClientId
        UsesCustomIdentity: !Ref UsesCustomIdentity
        CognitoUserPoolCustomDomain: !Ref CognitoCustomDomain
        CognitoUserPoolProviderName: !Ref ProviderName
        CloudfrontDistributionURL: !GetAtt WebUiStack.Outputs.WebUiUrl
        SettingsObjectKey: "settings.js"
        SolutionVersion: !FindInMap [Solution, Constants, SolutionVersion]
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue
  
  MetricsStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateAnonymizedUsageMetrics
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/metrics.template
      TimeoutInMinutes: 60
      Parameters:
        NodeLambdaRuntime: !GetAtt Variables.NodeLambdaRuntime
        PythonLambdaRuntime: !GetAtt Variables.PythonLambdaRuntime
        LambdaPowertoolsPythonLayer: !GetAtt LayerStack.Outputs.LambdaPowertoolsPython
        BotoUtils: !GetAtt LayerStack.Outputs.BotoUtils
        CustomResourceHelperLambdaLayer: !GetAtt LayerStack.Outputs.CustomResourceHelper
        DeploymentBucket: !GetAtt Variables.DeploymentBucketName
        DeploymentBucketKey: !FindInMap [ Solution, Constants, DeploymentBucketKey ]
        SolutionId: !FindInMap [ Solution, Constants, SolutionId ]
        SolutionVersion: !FindInMap [ Solution, Constants, SolutionVersion ]
        CrossAccountDiscovery: !Ref CrossAccountDiscovery
        AmplifyStorageBucket: !GetAtt S3Buckets.Outputs.AmplifyStorageBucket
        CostAndUsageReportBucket: !GetAtt S3Buckets.Outputs.CostAndUsageReportBucket
        IdentityType: !If [IsUsingCustomIdentity, !Ref IdentityType, Cognito]
        AppSyncAPIUrl: !GetAtt AppSyncApiStack.Outputs.AppSyncApiUrl
        AppSyncArn: !GetAtt AppSyncApiStack.Outputs.AppSyncApiArn
        MyApplicationsLambdaLogGroup: !GetAtt MyApplicationsResolversStack.Outputs.MyApplicationsLambdaLogGroup
        NeptuneInstanceClass: !Ref NeptuneInstanceClass
        OpensearchInstanceType: !Ref OpensearchInstanceType
      Tags:
        - Key: !GetAtt AppRegistryStack.Outputs.ApplicationTagKey
          Value: !GetAtt AppRegistryStack.Outputs.ApplicationTagValue

  AppRegistryStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/app-registry.template
      TimeoutInMinutes: 60
      Parameters:
        AppName: !FindInMap [Solution, Constants, AppName]
        ApplicationType: !FindInMap [Solution, Constants, ApplicationType]
        SolutionId: !FindInMap [Solution, Constants, SolutionId]
        SolutionName: !FindInMap [Solution, Constants, SolutionName]
        SolutionVersion: !FindInMap [Solution, Constants, SolutionVersion]


  AppInsightsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${Variables.DeploymentBucket}/application-insights.template
      TimeoutInMinutes: 60
      Parameters:
        ApplicationResourceGroupName: !GetAtt AppRegistryStack.Outputs.ApplicationResourceGroupName
        ClusterArn: !GetAtt TaskStack.Outputs.ClusterArn
        DiscoveryTaskLogGroup: !GetAtt TaskStack.Outputs.DiscoveryTaskLogGroup
        ClusterLifecycleEventsLogGroup: !GetAtt TaskStack.Outputs.ClusterLifecycleEventsLogGroup

Outputs:

  AppSyncArn:
    Value: !GetAtt AppSyncApiStack.Outputs.AppSyncApiArn
    Description: AppSync API ARN

  AppSyncApiUrl:
    Value: !GetAtt AppSyncApiStack.Outputs.AppSyncApiUrl
    Description: AppSync API URL

  WebUiUrl:
    Value: !GetAtt WebUiStack.Outputs.WebUiUrl
    Description: WebUI URL
