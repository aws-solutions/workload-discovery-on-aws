AWSTemplateFormatVersion: 2010-09-09

Transform: AWS::Serverless-2016-10-31

Description: Workload Discovery on AWS Metrics Stack

Parameters:

  DeploymentBucket:
    Type: String

  DeploymentBucketKey:
    Type: String

  SolutionId:
    Type: String

  SolutionVersion:
    Type: String

  AmplifyStorageBucket:
    Type: String

  CostAndUsageReportBucket:
    Type: String

  AppSyncAPIUrl:
    Type: String

  AppSyncArn:
    Type: String

  NodeLambdaRuntime:
    Type: String

  CrossAccountDiscovery:
    Type: String

  IdentityType:
    Type: String

  PythonLambdaRuntime:
    Type: String

  LambdaPowertoolsPythonLayer:
    Type: String

  BotoUtils:
    Type: String

  CustomResourceHelperLambdaLayer:
    Type: String

  MyApplicationsLambdaLogGroup:
    Type: String

  OpensearchInstanceType:
    Type: String

  NeptuneInstanceClass:
      Type: String

Mappings:

  Metrics:
    Constants:
      Url: https://metrics.awssolutionsbuilder.com/generic

Resources:

  MetricsCollectionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MetricsLambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: GetMetricsFromS3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                    - s3:GetObject
                    - s3:GetObjectAttributes
                    - s3:ListBucket
                Effect: Allow
                Resource:
                    - !Sub 'arn:${AWS::Partition}:s3:::${AmplifyStorageBucket}'
                    - !Sub 'arn:${AWS::Partition}:s3:::${CostAndUsageReportBucket}'
        - PolicyName: GetQueryFromAppsync
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: appsync:GraphQL
                Effect: Allow
                Resource: !Sub '${AppSyncArn}/*'

  MetricsUuidCrFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: Not applicable
          - id: W92
            reason: Not applicable
    Properties:
      CodeUri:
        Bucket: !Ref DeploymentBucket
        Key: !Sub ${DeploymentBucketKey}/metrics_uuid.zip
      Description: Custom Lambda resource for creating metrics UUID
      Runtime: !Ref PythonLambdaRuntime
      Handler: metrics_uuid.handler
      Layers:
        - !Ref LambdaPowertoolsPythonLayer
        - !Ref BotoUtils
        - !Ref CustomResourceHelperLambdaLayer
      Policies:
        - Statement:
            Action:
              - ssm:PutParameter
              - ssm:GetParameter
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Solutions/WorkloadDiscovery/*

  MetricsUuidCr:
    Type: Custom::MetricUuid
    Properties:
      ServiceToken: !GetAtt MetricsUuidCrFunction.Arn

  MetricsCollectionLambdaFunction:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: This Lambda does not connect to any resources in a VPC
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt MetricsCollectionLambdaRole.Arn
      Handler: src/index.handler
      CodeUri:
        Bucket: !Ref DeploymentBucket
        Key: !Sub ${DeploymentBucketKey}/metrics.zip
      Runtime: !Ref NodeLambdaRuntime
      Description: Lambda for Collecting Metrics
      Timeout: 300
      Tracing: Active
      MemorySize: 512
      Environment:
        Variables:
          NODE_OPTIONS: --enable-source-maps
          ACCOUNT_ID: !Ref AWS::AccountId
          METRICS_URL: !FindInMap [Metrics, Constants, Url]
          METRICS_UUID: !GetAtt MetricsUuidCr.MetricsUuid
          SOLUTION_ID: !Ref SolutionId
          SOLUTION_VERSION: !Ref SolutionVersion
          GRAPHQL_API_ENDPOINT: !Ref AppSyncAPIUrl
          CROSS_ACCOUNT_DISCOVERY: !Ref CrossAccountDiscovery
          IDENTITY_TYPE: !Ref IdentityType
          DIAGRAMS_BUCKET: !Ref AmplifyStorageBucket
          COST_BUCKET: !Ref CostAndUsageReportBucket
          NEPTUNE_INSTANCE_CLASS: !Ref NeptuneInstanceClass
          OPENSEARCH_INSTANCE_TYPE: !Ref OpensearchInstanceType
      Events:
        ScheduleEventV2:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: rate(24 hours)

  MyApplicationsOperationalMetricsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: This Lambda does not connect to any resources in a VPC
    Properties:
      Description: Handles operational metrics for myApplications resolvers
      Runtime: !Ref NodeLambdaRuntime
      Handler: index.handler
      CodeUri:
        Bucket: !Ref DeploymentBucket
        Key: !Sub ${DeploymentBucketKey}/metrics-subscription-filter.zip
      Timeout: 10
      MemorySize: 256
      Environment:
        Variables:
          METRICS_URL: !FindInMap [ Metrics, Constants, Url ]
          METRICS_UUID: !GetAtt MetricsUuidCr.MetricsUuid
          SOLUTION_ID: !Ref SolutionId
          SOLUTION_VERSION: !Ref SolutionVersion
      Events:
        CWLog:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: !Ref MyApplicationsLambdaLogGroup
            FilterPattern: '{$.metricEvent.type = "ApplicationCreated"}'
